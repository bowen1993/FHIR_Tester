var grabNode=function(e,t){var a,n=objType(t),i=e+Date.now();return"Object"===n?a=JSONObjectNode({data:t,keyName:e,key:i}):"Array"===n?a=JSONArrayNode({data:t,keyName:e,key:i}):"String"===n?a=JSONStringNode({keyName:e,value:t,key:i}):"Number"===n?a=JSONNumberNode({keyName:e,value:t,key:i}):"Boolean"===n?a=JSONBooleanNode({keyName:e,value:t,key:i}):"Null"===n?a=JSONNullNode({keyName:e,value:t,key:i}):console.error("How did this happen?",n),a},objType=function(e){var t=Object.prototype.toString.call(e).slice(8,-1);return t},SquashClickEventMixin={handleClick:function(e){e.stopPropagation()}},ExpandedStateHandlerMixin={getDefaultProps:function(){return{data:[],initialExpanded:!1}},getInitialState:function(){return{expanded:this.props.initialExpanded,createdChildNodes:!1}},handleClick:function(e){e.stopPropagation(),this.setState({expanded:!this.state.expanded})},componentWillReceiveProps:function(){this.renderedChildren=[],this.itemString=!1,this.needsChildNodes=!0}},JSONArrayNode=React.createClass({displayName:"JSONArrayNode",mixins:[ExpandedStateHandlerMixin],getChildNodes:function(){var e=[];if(this.state.expanded&&this.needsChildNodes){for(var t=0;t<this.props.data.length;t+=1)e.push(grabNode(t,this.props.data[t]));this.needsChildNodes=!1,this.renderedChildren=e}return this.renderedChildren},needsChildNodes:!0,renderedChildren:[],itemString:!1,getItemString:function(){if(!this.itemString){var e=1===this.props.data.length?" Item":" Items";this.itemString=this.props.data.length+e}return this.itemString},render:function(){var e=this.getChildNodes(),t={display:this.state.expanded?"block":"none"},a="array parentNode";return a+=this.state.expanded?" expanded":"",React.DOM.li({className:a,onClick:this.handleClick},React.DOM.label(null,this.props.keyName,":"),React.DOM.span(null,this.getItemString()),React.DOM.ol({style:t},e))}}),JSONObjectNode=React.createClass({displayName:"JSONObjectNode",mixins:[ExpandedStateHandlerMixin],getChildNodes:function(){if(this.state.expanded&&this.needsChildNodes){var e=this.props.data,t=[];for(k in e)e.hasOwnProperty(k)&&t.push(grabNode(k,e[k]));this.needsChildNodes=!1,this.renderedChildren=t}return this.renderedChildren},getItemString:function(){if(!this.itemString){var e=this.props.data,t=0,a=" Items";for(k in e)e.hasOwnProperty(k)&&(t+=1);1===t&&(a=" Item"),this.itemString=t+a}return this.itemString},itemString:!1,needsChildNodes:!0,renderedChildren:[],render:function(){var e={display:this.state.expanded?"block":"none"},t="object parentNode";return t+=this.state.expanded?" expanded":"",React.DOM.li({className:t,onClick:this.handleClick},React.DOM.label(null,this.props.keyName,":"),React.DOM.span(null,this.getItemString()),React.DOM.ul({style:e},this.getChildNodes()))}}),JSONStringNode=React.createClass({displayName:"JSONStringNode",mixins:[SquashClickEventMixin],render:function(){return React.DOM.li({className:"string itemNode",onClick:this.handleClick},React.DOM.label(null,this.props.keyName,":"),React.DOM.span(null,this.props.value))}}),JSONNumberNode=React.createClass({displayName:"JSONNumberNode",mixins:[SquashClickEventMixin],render:function(){return React.DOM.li({className:"number itemNode",onClick:this.handleClick},React.DOM.label(null,this.props.keyName,":"),React.DOM.span(null,this.props.value))}}),JSONNullNode=React.createClass({displayName:"JSONNullNode",mixins:[SquashClickEventMixin],render:function(){return React.DOM.li({className:"null itemNode",onClick:this.handleClick},React.DOM.label(null,this.props.keyName,":"),React.DOM.span(null,"null"))}}),JSONBooleanNode=React.createClass({displayName:"JSONBooleanNode",mixins:[SquashClickEventMixin],render:function(){var e=this.props.value?"true":"false";return React.DOM.li({className:"boolean itemNode "+e,onClick:this.handleClick},React.DOM.label(null,this.props.keyName,":"),React.DOM.span(null,e))}}),JSONTree=React.createClass({displayName:"JSONTree",getDefaultProps:function(){return{source:!1}},loadDataFromURL:function(e){var t=this;request=new XMLHttpRequest,request.open("GET",e,!0),request.onload=function(){request.status>=200&&request.status<400?(jsonData=JSON.parse(request.responseText),t.setProps({data:jsonData})):console.error("OH NO! Your request was bad.")},request.onerror=function(){console.error("Connection error")},request.send()},componentDidMount:function(){this.props.source&&this.loadDataFromURL(this.props.source)},render:function(){var e,t=objType(this.props.data);return"Object"===t?e=JSONObjectNode({data:this.props.data,keyName:"(root)",initialExpanded:!0}):"Array"===t?e=JSONArrayNode({data:this.props.data,initialExpanded:!0,keyName:"(root)"}):console.error("How did you manage that?"),React.DOM.ul({className:"json_tree"},e)}});